;;Config
(setf waveSize 10)
(setf waveNum 4)
(setf vec (gen-sawtooth waveSize 1 1))
(setf pVec (reverse (vector-to-pitch '(bb1 c4) vec)))
(setf alteredPitch (filter-repeat 1 (reverse (pitch-expansion-series waveNum (gen-integer -1 4) (list waveSize) pVec))))
(list-plot (list-to-vector (pitch-to-integer (flatten alteredPitch))))

(setf length (reverse (vector-to-length '1/32 2 6 (gen-sawtooth (length (flatten alteredPitch)) 1 1))))

(setf descending (make-omn :pitch alteredPitch :length length))
(setf last (make-omn :pitch '(a1) :length (gen-repeat 32 '(s))))
(setf omn (assemble-seq descending last))
(setf t-sig (get-time-signature omn))
(def-score revPitchExpansion
           (:key-signature 'atonal
            :time-signature '(4 4)
            :tempo 160
            :layout (grand-layout 'piano))
(piano
 :omn omn
 :sound 'gm
 :program 1))

(display-midi *last-score*)
(display-musicxml *last-score*)